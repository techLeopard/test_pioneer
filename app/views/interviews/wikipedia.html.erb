<% provide(:title, 'QA wikipedia') %>
<h1>QA wikipedia</h1>
<p>
  Здесь можно найти ответы и добавить статью по теме.
</p>

<div>

  <%= link_to "Добавить раздел", "#" %>

  <p>В разделе должна быть возможность добавить статью.</p>
  <p>Например, Раздел "Теория тестирования"</p>
  <p>Тема "Виды тестирования"</p>
  <p>Статья "Виды тестирования"</p>


  <ul>
    <li>Теория тестирования (Раздел)</li>
      <ul>
        <li>Что такое тестирование (Статья)</li>
        <li>Источники ожидаемого поведения</li>
          <ul>
            <li>Product owner</li>
            <li>Конкуренты</li>
            <li>Common sense / Здравый смысл</li>
          </ul>
        <li>Цели тестирования</li>
            <ul>
            <li>Верификация</li>
            <li>Валидация</li>
            <li>Обнаружение дефектов</li>
          </ul>
        <li>Виды тестирования / Классификация</li>
          <ul>
            <li>по степени автоматизации</li>
              <ul>
                <li>Ручное тестирование — тест-кейсы выполняет человек.</li>
                <li>Автоматизированное тестирование — тест-кейсы частично или полностью выполняет специальное инструментальное средство.</li>
              </ul>
            <li>по запуску кода на исполнение</li>
              <ul>
                <li>Статическое тестирование - без запуска кода.</li>
                <li>Динамическое тестирование - с запуском кода.</li>
              </ul>
            <li>по доступу к коду и архитектуре приложения</li>
              <ul>
                <li>Метод белого ящика — доступ к коду есть.</li>
                <li>Метод чёрного ящика — доступа к коду нет.</li>
                <li>Метод серого ящика — к части кода доступ есть, к части — нет.</li>
              </ul>
            <li>по уровню детализации приложения (по уровню тестирования)</li>
              <ul>
                <li>Модульное (компонентное) тестирование — проверяются отдельные небольшие части приложения.</li>
                <li>Интеграционное тестирование — проверяется взаимодействие между несколькими частями приложения.</li>
                <li>Системное тестирование — приложение проверяется как единое целое.
              </ul>
            <li>по принципам работы с приложением</li>
              <ul>
                <li>Позитивное тестирование — все действия с приложением выполняются строго по инструкции без никаких недопустимых действий, некорректных данных и т.д. Можно образно сказать, что приложение исследуется в «тепличных условиях».</li>
                <li>Негативное тестирование — в работе с приложением выполняются (некорректные) операции и используются данные, потенциально приводящие к ошибкам (классика жанра — деление на ноль)</li>
              </ul>
            <li>по убыванию степени важности тестируемых функций</li>
              <ul>
                <li>Дымовое тестирование (обязательно изучите этимологию термина — хотя бы в Википедии110) — проверка самой важной, самой ключевой функциональности, неработоспособность которой делает бессмысленной саму идею использования приложения.</li>
                <li>Тестирование критического пути — проверка функциональности, используемой типичными пользователями в типичной повседневной деятельности.</li>
                <li>Расширенное тестирование — проверка всей (остальной) функциональности, заявленной в требованиях.</li>
              </ul>
            <li>по объектам тестирования</li>
              <ul>
                <li>Функциональное</li>
                <li>Нефункциональное</li>
              </ul>
            <li>по целям и задачам</li>
              <ul>
                <li>Интерфейс (UI)</li>
                <li>Удобство использования (UX)</li>
                <li>Доступности (accessibility)</li>
                <li>Безопасности</li>
                <li>Производительности</li>
                <li>Локализации</li>
                <li>Интернационализации</li>
                <li>Совместимости</li>
                <li>Отказоустойчивости</li>
                <li>Инсталляционное</li>
                <li>Регрессионное</li>
                <li>Приемочное</li>
              </ul>            
          </ul>

        <li>Техники/методики тестирования</li>
          <ul>
            <li>Эквивалентное разбиение (Equivalence Partitioning). Разделение входных данных на эквивалентные классы, в пределах которых ожидается одинаковое поведение.</li>
            <li>Граничное значение (Boundary Value Analysis). Тестирование граничных значений входных данных, поскольку на границах часто возникают ошибки.</li>
            <li>Дерево решений (Decision Table Testing). Создание таблицы для отображения различных входных сценариев и ожидаемых результатов.</li>
            <li>Причинно-следственный граф (Cause-Effect Graphing). Использование графа для отображения функциональных входных и выходных данных.</li>
            <li>Опытно-ориентированные методики (Experience-based Techniques)</li>
              <ul>
                <li>Эксплоративное тестирование (Exploratory Testing). Неструктурированный подход к тестированию, основанный на опыте и интуиции тестировщика.</li>
                <li>Тестирование на основе ошибок (Error Guessing). Основывается на опыте тестировщика в идентификации типичных мест, где могут возникнуть ошибки.</li>
            <li>Доменное тестирование и комбинации параметров</li>
            <li>Попарное тестирование и поиск комбинаций</li>
              </ul>  
          </ul>

        <li>Тестовая документация</li>
          <ul>
            <li>Требования</li>
            <li>Чеклист</li>
                <ul>
                  <li>Описание</li>
                  <li>Примеры чеклистов</li>
                </ul>
            <li>Тест кейс (TestRail)</li>
            <li>Тест план и отчёт о результатах тестирования (TestRail)</li>
            <li>Баг репорт / Отчет о дефектет(Jira)</li>
            <li>Тестовое покрытие</li>
            <li>Тестовый сценарий, тестовая стратегия</li>
          </ul>
        <li>Тест-дизайн</li>
        <li>Техники тест-дизайна</li>
        <li>Жизненный цикл бага</li>
        <li>Виды приложений</li>
      </ul>
    <li>SDLC и STLC</li>  
      <ul>
        <li>Методологии разработки ПО (SDLC)</li>
          <ul>
            <li>CI/CD</li>
            <li>Водопадная модель</li>
            <li>V-образная модель</li>
            <li>Спиральная модель</li>
            <li>Модель хаоса</li>
            <li>Agile</li>
              <ul>
                <li>Scrum</li>
                  <ul>
                    <li>События</li>
                      <ul>
                        <li>Daily scrum (meeting/standup) 15-20 min на команду</li>
                        <li>Несколько спринтов образуют ...</li>
                        <li>Sprint</li>
                        <li>Демо</li>
                        <li>Релиз</li>
                        <li>Ретроспектива</li>
                      </ul>
                    <li>Роли</li>
                        <ul>
                          <li>Свиньи</li>
                            <ul>
                              <li>Product Owner</li>
                              <li>Scrum master</li>
                              <li>Dev team</li>
                              <li>Тестировщики</li>
                            </ul> 
                          <li>Куры</li>
                            <ul>
                              <li>Конечные пользователи</li>
                              <li>Руководители</li>
                              <li>Консультанты</li>
                            </ul>  
                        </ul>
                    <li>Артефакты</li>
                      <ul>
                        <li>Sprint backlog</li>
                        <li>Product backlog</li>
                        <li>Задачи для спринта</li>
                      </ul>
                  </ul>
                <li>Kanban</li>
              </ul>
            </ul>
          </ul>
    <li>SQL</li>
      <ul>
        <li>Что такое SQL</li>
        <li>Основные запросы SQL</li>
        <li>Использование SQL в тестировании</li>
      </ul>

    <li>Как работает интернет</li>
      <ul>
        <li>Что происходит когда вы вводите адрес (URL) в адресную строку браузера и нажимаете Enter</li>
        <li>HTTP, HTTPS</li>
        <li>Структура HTTP запроса и ответа</li>
        <li>Основные HTTP запросы</li>
        <li>Статус коды</li>
        <li>Cookie, cache</li>
        <li>SSL, TCP/IP</li>
      </ul>  

    <li>Операционные системы</li>
      <ul>
        <li>Unix и Unix-подобные</li>
        <li>Windows</li>
        <li>Мобильные</li>
        <li>RTOS</li>
        <li>Основные команды терминала Unix системы</li>
      </ul>

    <li>Git</li>
      <ul>
        <li>Что такое Git</li>
        <li>Основные команды Git</li>
        <li>Использование Git в тестировании</li>
      </ul>

    <li>Postman</li>
      <ul>
        <li>Создание запросов</li>
        <li>Создание коллекции запросов</li>
        <li>Переменные: глобальные, локальные</li>
        <li>Collection runner и Monitor</li>
      </ul> 

    <li>REST, SOAP (Раздел)</li>
      <ul>
        <li>REST (Тема)</li>
        <li>Принципы REST</li>
        <li>SOAP</li>
        <li>Collection runner и Monitor</li>
        <li>JSON, XML</li>
      </ul> 

  </ul>
</div>


<!--
  <li></li>
    <ul>
      <li></li>
      <li></li>
      <li></li>
    </ul>
-->